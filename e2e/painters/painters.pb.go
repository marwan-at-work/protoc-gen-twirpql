// Code generated by protoc-gen-go. DO NOT EDIT.
// source: painters.proto

package painters

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Painter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Painter) Reset()         { *m = Painter{} }
func (m *Painter) String() string { return proto.CompactTextString(m) }
func (*Painter) ProtoMessage()    {}
func (*Painter) Descriptor() ([]byte, []int) {
	return fileDescriptor_b32ba4ba83eb3540, []int{0}
}

func (m *Painter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Painter.Unmarshal(m, b)
}
func (m *Painter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Painter.Marshal(b, m, deterministic)
}
func (m *Painter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Painter.Merge(m, src)
}
func (m *Painter) XXX_Size() int {
	return xxx_messageInfo_Painter.Size(m)
}
func (m *Painter) XXX_DiscardUnknown() {
	xxx_messageInfo_Painter.DiscardUnknown(m)
}

var xxx_messageInfo_Painter proto.InternalMessageInfo

func (m *Painter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Painter)(nil), "painters.Painter")
}

func init() { proto.RegisterFile("painters.proto", fileDescriptor_b32ba4ba83eb3540) }

var fileDescriptor_b32ba4ba83eb3540 = []byte{
	// 108 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x48, 0xcc, 0xcc,
	0x2b, 0x49, 0x2d, 0x2a, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x64,
	0xb9, 0xd8, 0x03, 0x20, 0x6c, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05,
	0x46, 0x0d, 0xce, 0x20, 0x30, 0xdb, 0x49, 0x3b, 0x4a, 0x33, 0x37, 0xb1, 0xa8, 0x3c, 0x31, 0x4f,
	0x2f, 0x33, 0x5f, 0x1f, 0xac, 0x37, 0x59, 0x37, 0x3d, 0x35, 0x4f, 0xb7, 0xa4, 0x3c, 0xb3, 0xa8,
	0xa0, 0x30, 0x47, 0x3f, 0xd5, 0x28, 0x55, 0x1f, 0x66, 0x56, 0x12, 0x1b, 0x58, 0x81, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x72, 0x73, 0x21, 0x89, 0x6e, 0x00, 0x00, 0x00,
}
