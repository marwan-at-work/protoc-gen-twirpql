package twirpql

import (
	"encoding/json"
	"io"
)

type MyInts map[int64]string

func (scalar *MyInts) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return nil
	}
	return json.Unmarshal([]byte(str), scalar)
}

func (scalar MyInts) MarshalGQL(w io.Writer) {
	json.NewEncoder(w).Encode(scalar)
}

type MyMap map[string]string

func (scalar *MyMap) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return nil
	}
	return json.Unmarshal([]byte(str), scalar)
}

func (scalar MyMap) MarshalGQL(w io.Writer) {
	json.NewEncoder(w).Encode(scalar)
}
